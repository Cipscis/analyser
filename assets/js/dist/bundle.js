!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const{stringify:r,parse:o}=(()=>{const e={stringify:function(t,n){(n=n||{}).transpose=n.transpose||!1,n.sanitise=n.sanitise||!1;let r=t;return r=e._shape(t,n),r=e._escape(r,n),r=e._join(r),r},_shape:function(e,t){const n=t.transpose,r=e.reduce((e,t)=>Math.max(e,t.length),0),o=n?r:e.length,l=n?e.length:r;let s=[];for(let t=0;t<o;t++){let r=[];for(let o=0;o<l;o++){let l=n?o:t,s=n?t:o,a=e[l][s];s>=e[l].length&&(a=""),r.push(a)}s.push(r)}return s},_escape:function(e,t){const n=t.sanitise;for(let t=0;t<e.length;t++){let r=e[t];for(let e=0;e<r.length;e++)void 0===r[e]?r[e]="":"string"!=typeof r[e]&&(r[e]=""+r[e]),n&&r[e].match(/^[=\-+@]/)&&(r[e]="\t"+r[e]),r[e].match(/,|"|\n/)&&(r[e]=r[e].replace(/"/g,'""'),r[e]='"'+r[e]+'"')}return e},_join:function(e){for(let t=0;t<e.length;t++)e[t]=e[t].join(",");return e=e.join("\n")},parse:function(t,n){let r=e._tokenise(t);return e._validate(r),n&&n.mapper&&(r=r.map(e=>e.map(n.mapper))),r},_tokenise:function(e){let t=[];e=e.replace(/\r/g,"");let n=!1,r=!1,o=0,l=[];for(let s=0;s<e.length;s++){let a=e[s],i=","===a,u='"'===a,c="\n"===a,f=s===e.length-1;if(n)if(u){if('"'===e[s+1]){s++;continue}if(n=!1,r=!0,!f)continue}else if(f)throw new Error("CSV parse: Reached end of file before ending quote. At index "+s);if(!n&&(i||c||f)){let n=e.substring(o,s+1);(i||c)&&(n=n.substring(0,n.length-1)),r&&(r=!1,n=n.substring(1,n.length-1),n=n.replace(/""/g,'"')),l.push(n),i&&f&&l.push(""),(c||f)&&(t.push(l),c&&(l=[])),o=s+1}else{if(r)throw new Error("CSV parse: A value must be complete immediately after closing a quote. At index "+s);u&&(n=!0)}}return t},_validate:function(e){if(e&&e.length>1){let t=e[0].length;for(let n=1;n<e.length;n++){if(e[n].length!==t)throw new Error(`CSV parse: Row ${n} does not have the same length as the first row (${t})`)}}}};return{stringify:e.stringify,parse:e.parse}})();class l extends Array{constructor(e){super(e.length);for(let t=0;t<e.length;t++)this[t]=e[t]}getCol(e){return this.map(t=>t[e])}addCol(e){if(this.length!==e.length)throw new Error(`Cannot add col of length ${e.length} to rows of length ${this.length}`);const t=this[0].length;for(let[t,n]of this.entries())n.push(e[t]);return t}getDerivedCol(e,...t){return this.map((n,r)=>{const o=[n];for(let e of t)o.push(e[r]);return e.apply(this,o)})}addDerivedCol(e,...t){const n=this.getDerivedCol.apply(this,arguments);return this.addCol(n)}createSubTable(e,t){t=t||", ";return this.map(n=>{const r={};for(let o in e){const l=n[e[o]];r[o]=l instanceof Array?l.join(t):l}return r})}createSubTableString(e){const t=this.createSubTable(e,",");return s._convertTableToString(t)}getColSummary(e,t){e instanceof Array||(e=[e]);const n={};for(let t of this)for(let r of e){const e=t[r];if(void 0!==e&&""!==e){let t;t=e instanceof Array?e:[e];for(let e of t)e in n?n[e]++:n[e]=1}}return void 0!==t&&(n=s._groupColSummaryByAliases(n,t)),n}getColAsDataSeries(e,t){const n=this.getColSummary(e),r=[];for(let e=0;e<t.length;e++)r[e]=0;for(let e in n){const o=n[e];let l=t.indexOf(e);-1===l&&(l=t.indexOf(parseInt(e,10))),-1!==l&&(r[l]=o)}return r}getComparisonSummary(e,t,n,r){2===arguments.length?(n=t,t=void 0):3===arguments.length&&(t instanceof Array||(r=n,n=t,t=void 0));const o=this.getColSummary(e,t),l=this.getColSummary(n,r),a={};t&&(a.HEADERS=t),r&&(a.VARS=r);const i=s._getAliasFilters(a),u={};for(let t in l){u[t]={};for(let r in o)u[t][r]=this.filter(i(n,s._extractValue(t)).andBy(e,s._extractValue(r))).length}return u}getComparisonSummaryString(e,t,n,r){const o=this.getComparisonSummary.apply(this,arguments);return s._convertTableToString(o,!0)}}const s={loadFile:async function(...e){const t=e.map(e=>s._loadFile(e));return e.length>1?await Promise.all(t):await t[0]},_loadFile:async function(e){const t=await fetch(e.path);if(t.ok){const n=await t.text(),r=o(n,{mapper:s._extractValue});return s._processData(r,e)}throw new Error(`Failed to fetch file at ${e.path}: ${t.status}`)},_processData:function(e,t){t.headerRows=t.headerRows||0,t.footerRows=t.footerRows||0,t.cols=t.cols||{},t.aliases=t.aliases||{},t.arrayCols=t.arrayCols||{},t.enumsMap=t.enumsMap||{},t.uniqueCols=t.uniqueCols||[];const n={};n.cols=t.cols,n.aliases=t.aliases,n.by=s._getAliasFilters(t.aliases),n.enumsMap=t.enumsMap,0!==t.headerRows&&e.splice(0,t.headerRows),0!==t.footerRows&&e.splice(-t.footerRows),n.rows=new l(e);for(let e=0;e<n.rows.length;e++){const r=n.rows[e];for(let e in t.arrayCols)r[e]=(r[e]+"").trim().split(t.arrayCols[e]||" ");for(let e in t.defaultColValues)e in t.arrayCols||r[e]+""==t.defaultColValues[e]+""&&(r[e]="");for(let e in t.defaultCols)e in t.arrayCols||""===(r[e]+"").trim()&&(r[e]=t.defaultCols[e])}return n.enums=s._buildEnums(e,t),n},_buildEnums:function(e,t){const n={};for(let r in t.cols){let o=!0;t.uniqueCols.includes(t.cols[r])&&(o=!1);for(let e in t.enumsMap)if(t.enumsMap[e].includes(t.cols[r])){o=!1;break}o&&(n[r]=[],s._collectEnums(e,n[r],t.cols[r]))}for(let r in t.enumsMap)n[r]=[],s._collectEnums.apply(this,[e,n[r]].concat(t.enumsMap[r]));return n},_collectEnums:function(e,t,...n){t=t||[];for(let r of e)for(let e of n){const n=r[e];if(n instanceof Array)for(let e of n)""!==e&&-1===t.indexOf(e)&&t.push(e);else""!==n&&-1===t.indexOf(n)&&t.push(n)}return t},combineData:function(...e){},_extractValue:function(e){return"true"===e||"false"!==e&&s._extractNumber(e)},_extractNumber:function(e){let t=e.replace(/,|%$/g,"");if(parseFloat(t)===+t){if(e.match(/%$/)){let e=(t+"").replace(/^[^.]+/,"").length;t/=100,t=t.toFixed(e+2)}return+t}return e},_getAliasFilters:function(e){return function(t,n){const r=r=>s._applyFilter(r,t,n,e);return r.andBy=(t,n)=>o=>r(o)&&s._applyFilter(o,t,n,e),r.orBy=(t,n)=>o=>r(o)&&s._applyFilter(o,t,n,e),s._extendFilter(r,e),r}},_extendFilter:function(e,t){return e.andBy=(n,r)=>{const o=o=>e(o)&&s._applyFilter(o,n,r,t);return s._extendFilter(o,t),o},e.orBy=(n,r)=>{const o=o=>e(o)||s._applyFilter(o,n,r,t);return s._extendFilter(o,t),o},e},_applyFilter:function(e,t,n,r){if(n instanceof Function)return n(e[t]);n instanceof Array||(n=[n]);const o=e[t];let l;l=o instanceof Array?o:[o];for(let e of l)for(let t of n)if(s._matchAlias(t,e,r))return!0;return!1},_matchAlias:function(e,t,n){if(e===t)return!0;for(let r in n){const o=n[r];for(let n of o)if(-1!==n.indexOf(e)&&-1!==n.indexOf(t))return!0}return!1},getColNumber:function(e){if(Number.isInteger(e)&&e>=0)return e;if(!("string"==typeof e||e instanceof String))return null;if(0===e.length)return null;const t=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];let n=-1;const r=e.toUpperCase();for(let o=0;o<r.length;o++){const l=r[o],s=t.indexOf(l);if(-1===s)return null;n+=(s+1)*Math.pow(t.length,e.length-(o+1))}return n},getColNumbers:function(e){const t={};for(let n in e)t[n]=s.getColNumber(e[n]);return t},_convertTableToString:function(e,t,n,r){const o=n||"\t",l=r||"\n";let s="";const a=e=>{"string"!=typeof e&&(e=""+e),-1!==e.indexOf(o)&&(e='"'+e.replace(/"/g,'""')+'"'),s+=e+o},i=()=>{s=s.substr(0,s.length-o.length)+l};t&&(s+=o);let u=!1;for(let t in e){if(!0===u)break;u=!0;let n=e[t];for(let e in n)a(e)}i();for(let n in e){let r=!1;const o=e[n];for(let e in o){const l=o[e];t&&(!1===r&&a(n),r=!0),a(l)}i()}return s},_groupColSummaryByAliases:function(e,t){const n={};for(let r in e){let o=!1;for(let l of t)-1!==l.indexOf(r)&&(o=!0,l[0]in n?n[l[0]]+=e[r]:n[l[0]]=e[r]);!1===o&&(n[r]=e[r])}return n}},{loadFile:a,getColNumber:i,getColNumbers:u}=s;!async function(){let e={path:"/analyser/assets/data/city example.csv",headerRows:1,cols:{NAME:i("A"),COUNTRY:i("B"),POPULATION:i("C"),CAPITAL:i("D"),PUBLIC_TRANSPORT:i("E"),MAYOR_2012:i("F"),MAYOR_2018:i("G")},arrayCols:{},aliases:{COUNTRY:[["New Zealand","Aotearoa"]]},enumsMap:{}};e.arrayCols[e.cols.PUBLIC_TRANSPORT]=",",e.arrayCols[e.cols.MAYOR_2018]=",";let t={path:"/analyser/assets/data/city example 2.csv",headerRows:1,cols:{NAME:i("A"),COUNTRY:i("B"),POPULATION:i("C")}},n={path:"/analyser/assets/data/city example 3.csv",headerRows:1,cols:{YEAR:i("A"),POPULATION:i("B")}},[r,o,l]=await a(e,t,n);const{rows:s,cols:u,by:c}=r;console.log(s),console.log(u),console.log(s.filter(c(u.POPULATION,e=>e>1e3).andBy(u.PUBLIC_TRANSPORT,"Train").orBy(u.PUBLIC_TRANSPORT,"Bus")))}()}]);
//# sourceMappingURL=bundle.js.map